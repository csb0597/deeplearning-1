{"cells":[{"cell_type":"markdown","metadata":{"id":"ysyrghi1QKqk"},"source":["# 13장 모델의 성능 검증하기"]},{"cell_type":"markdown","metadata":{"id":"DmMTfSRXQKqp"},"source":["##  1. 데이터의 확인과 예측 실행"]},{"cell_type":"code","execution_count":26,"metadata":{"id":"3k7ysgDLQKqr","outputId":"d52e555b-2171-4763-f12f-2c06c3367186","executionInfo":{"status":"ok","timestamp":1733280780519,"user_tz":-540,"elapsed":324,"user":{"displayName":"","userId":""}},"colab":{"base_uri":"https://localhost:8080/","height":254}},"outputs":[{"output_type":"stream","name":"stdout","text":["fatal: destination path 'data' already exists and is not an empty directory.\n"]},{"output_type":"execute_result","data":{"text/plain":["       0       1       2       3       4       5       6       7       8   \\\n","0  0.0200  0.0371  0.0428  0.0207  0.0954  0.0986  0.1539  0.1601  0.3109   \n","1  0.0453  0.0523  0.0843  0.0689  0.1183  0.2583  0.2156  0.3481  0.3337   \n","2  0.0262  0.0582  0.1099  0.1083  0.0974  0.2280  0.2431  0.3771  0.5598   \n","3  0.0100  0.0171  0.0623  0.0205  0.0205  0.0368  0.1098  0.1276  0.0598   \n","4  0.0762  0.0666  0.0481  0.0394  0.0590  0.0649  0.1209  0.2467  0.3564   \n","\n","       9   ...      51      52      53      54      55      56      57  \\\n","0  0.2111  ...  0.0027  0.0065  0.0159  0.0072  0.0167  0.0180  0.0084   \n","1  0.2872  ...  0.0084  0.0089  0.0048  0.0094  0.0191  0.0140  0.0049   \n","2  0.6194  ...  0.0232  0.0166  0.0095  0.0180  0.0244  0.0316  0.0164   \n","3  0.1264  ...  0.0121  0.0036  0.0150  0.0085  0.0073  0.0050  0.0044   \n","4  0.4459  ...  0.0031  0.0054  0.0105  0.0110  0.0015  0.0072  0.0048   \n","\n","       58      59  60  \n","0  0.0090  0.0032   0  \n","1  0.0052  0.0044   0  \n","2  0.0095  0.0078   0  \n","3  0.0040  0.0117   0  \n","4  0.0107  0.0094   0  \n","\n","[5 rows x 61 columns]"],"text/html":["\n","  <div id=\"df-82d8d9c0-28f0-450c-bddf-409139e9e07a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","      <th>...</th>\n","      <th>51</th>\n","      <th>52</th>\n","      <th>53</th>\n","      <th>54</th>\n","      <th>55</th>\n","      <th>56</th>\n","      <th>57</th>\n","      <th>58</th>\n","      <th>59</th>\n","      <th>60</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.0200</td>\n","      <td>0.0371</td>\n","      <td>0.0428</td>\n","      <td>0.0207</td>\n","      <td>0.0954</td>\n","      <td>0.0986</td>\n","      <td>0.1539</td>\n","      <td>0.1601</td>\n","      <td>0.3109</td>\n","      <td>0.2111</td>\n","      <td>...</td>\n","      <td>0.0027</td>\n","      <td>0.0065</td>\n","      <td>0.0159</td>\n","      <td>0.0072</td>\n","      <td>0.0167</td>\n","      <td>0.0180</td>\n","      <td>0.0084</td>\n","      <td>0.0090</td>\n","      <td>0.0032</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.0453</td>\n","      <td>0.0523</td>\n","      <td>0.0843</td>\n","      <td>0.0689</td>\n","      <td>0.1183</td>\n","      <td>0.2583</td>\n","      <td>0.2156</td>\n","      <td>0.3481</td>\n","      <td>0.3337</td>\n","      <td>0.2872</td>\n","      <td>...</td>\n","      <td>0.0084</td>\n","      <td>0.0089</td>\n","      <td>0.0048</td>\n","      <td>0.0094</td>\n","      <td>0.0191</td>\n","      <td>0.0140</td>\n","      <td>0.0049</td>\n","      <td>0.0052</td>\n","      <td>0.0044</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.0262</td>\n","      <td>0.0582</td>\n","      <td>0.1099</td>\n","      <td>0.1083</td>\n","      <td>0.0974</td>\n","      <td>0.2280</td>\n","      <td>0.2431</td>\n","      <td>0.3771</td>\n","      <td>0.5598</td>\n","      <td>0.6194</td>\n","      <td>...</td>\n","      <td>0.0232</td>\n","      <td>0.0166</td>\n","      <td>0.0095</td>\n","      <td>0.0180</td>\n","      <td>0.0244</td>\n","      <td>0.0316</td>\n","      <td>0.0164</td>\n","      <td>0.0095</td>\n","      <td>0.0078</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.0100</td>\n","      <td>0.0171</td>\n","      <td>0.0623</td>\n","      <td>0.0205</td>\n","      <td>0.0205</td>\n","      <td>0.0368</td>\n","      <td>0.1098</td>\n","      <td>0.1276</td>\n","      <td>0.0598</td>\n","      <td>0.1264</td>\n","      <td>...</td>\n","      <td>0.0121</td>\n","      <td>0.0036</td>\n","      <td>0.0150</td>\n","      <td>0.0085</td>\n","      <td>0.0073</td>\n","      <td>0.0050</td>\n","      <td>0.0044</td>\n","      <td>0.0040</td>\n","      <td>0.0117</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.0762</td>\n","      <td>0.0666</td>\n","      <td>0.0481</td>\n","      <td>0.0394</td>\n","      <td>0.0590</td>\n","      <td>0.0649</td>\n","      <td>0.1209</td>\n","      <td>0.2467</td>\n","      <td>0.3564</td>\n","      <td>0.4459</td>\n","      <td>...</td>\n","      <td>0.0031</td>\n","      <td>0.0054</td>\n","      <td>0.0105</td>\n","      <td>0.0110</td>\n","      <td>0.0015</td>\n","      <td>0.0072</td>\n","      <td>0.0048</td>\n","      <td>0.0107</td>\n","      <td>0.0094</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 61 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-82d8d9c0-28f0-450c-bddf-409139e9e07a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-82d8d9c0-28f0-450c-bddf-409139e9e07a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-82d8d9c0-28f0-450c-bddf-409139e9e07a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8f3f28a2-c845-4037-acf0-12548ec922b8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8f3f28a2-c845-4037-acf0-12548ec922b8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8f3f28a2-c845-4037-acf0-12548ec922b8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":26}],"source":["import pandas as pd\n","\n","# 깃허브에 준비된 데이터를 가져옵니다.\n","!git clone https://github.com/taehojo/data.git\n","\n","# 광물 데이터를 불러옵니다.\n","df = pd.read_csv('./data/sonar3.csv', header=None)\n","\n","# 첫 5줄을 봅니다.\n","df.head()"]},{"cell_type":"code","execution_count":23,"metadata":{"id":"BKPI6eI2QKqs","outputId":"708ca9ad-635c-43e6-da17-3f3be812c60c","executionInfo":{"status":"ok","timestamp":1733280765888,"user_tz":-540,"elapsed":285,"user":{"displayName":"","userId":""}},"colab":{"base_uri":"https://localhost:8080/","height":178}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["60\n","1    111\n","0     97\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>60</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>111</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>97</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":23}],"source":["# 일반 암석(0)과 광석(1)이 몇 개 있는지 확인합니다.\n","df[60].value_counts()"]},{"cell_type":"code","execution_count":24,"metadata":{"id":"HI7lJCZ6QKqs","executionInfo":{"status":"ok","timestamp":1733280769635,"user_tz":-540,"elapsed":274,"user":{"displayName":"","userId":""}}},"outputs":[],"source":["# 음파 관련 속성을 X로, 광물의 종류를 y로 저장합니다.\n","X = df.iloc[:,0:60]\n","y = df.iloc[:,60]"]},{"cell_type":"code","execution_count":25,"metadata":{"id":"s65Y52a4QKqu","outputId":"1c257387-ac7d-4e67-8529-4cc3c5904b99","scrolled":true,"executionInfo":{"status":"error","timestamp":1733280771321,"user_tz":-540,"elapsed":308,"user":{"displayName":"","userId":""}},"colab":{"base_uri":"https://localhost:8080/","height":373}},"outputs":[{"output_type":"error","ename":"ValueError","evalue":"Name tf.RaggedTensorSpec has already been registered for class tensorflow.python.ops.ragged.ragged_tensor.RaggedTensorSpec.","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-25-702c1f67933e>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mkeras\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmodels\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mSequential\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mkeras\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlayers\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mDense\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;31m# 모델을 설정합니다.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mmodel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mSequential\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/tensorflow/__init__.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     47\u001b[0m \u001b[0m_tf2\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0menable\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     48\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 49\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_api\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mv2\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0m__internal__\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     50\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_api\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mv2\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0m__operators__\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     51\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_api\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mv2\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0maudio\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/tensorflow/_api/v2/__internal__/__init__.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_api\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mv2\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__internal__\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mdecorator\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_api\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mv2\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__internal__\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mdispatch\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 11\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_api\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mv2\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__internal__\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mdistribute\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     12\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_api\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mv2\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__internal__\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0meager_context\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     13\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_api\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mv2\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__internal__\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mfeature_column\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/tensorflow/_api/v2/__internal__/distribute/__init__.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0msys\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0m_sys\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_api\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mv2\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__internal__\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdistribute\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mcombinations\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      9\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_api\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mv2\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__internal__\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdistribute\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0minterim\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_api\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mv2\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__internal__\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdistribute\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mmulti_process_runner\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/tensorflow/_api/v2/__internal__/distribute/combinations/__init__.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0msys\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0m_sys\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdistribute\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcombinations\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0menv\u001b[0m \u001b[0;31m# line: 456\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      9\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdistribute\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcombinations\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mgenerate\u001b[0m \u001b[0;31m# line: 365\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdistribute\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcombinations\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0min_main_process\u001b[0m \u001b[0;31m# line: 418\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/tensorflow/python/distribute/combinations.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     31\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     32\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mclient\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0msession\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 33\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdistribute\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mcollective_all_reduce_strategy\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     34\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdistribute\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mdistribute_lib\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     35\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdistribute\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mmulti_process_runner\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/tensorflow/python/distribute/collective_all_reduce_strategy.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     23\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcore\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mprotobuf\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mtensorflow_server_pb2\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     24\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdistribute\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mcollective_util\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 25\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdistribute\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mcross_device_ops\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mcross_device_ops_lib\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     26\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdistribute\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mcross_device_utils\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     27\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdistribute\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mdevice_util\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/tensorflow/python/distribute/cross_device_ops.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     26\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mclient\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mdevice_lib\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     27\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdistribute\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mcollective_util\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 28\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdistribute\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mcross_device_utils\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     29\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdistribute\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mdevice_util\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     30\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdistribute\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mdistribute_utils\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/tensorflow/python/distribute/cross_device_utils.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     20\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     21\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdistribute\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mcollective_util\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 22\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdistribute\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mvalues\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mvalue_lib\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     23\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0meager\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mbackprop_util\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     24\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0meager\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mcontext\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/tensorflow/python/distribute/values.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     21\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcore\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mprotobuf\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mstruct_pb2\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     22\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdistribute\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mdevice_util\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 23\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdistribute\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mdistribute_lib\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     24\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdistribute\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mpacked_distributed_variable\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mpacked\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     25\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdistribute\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mreduce_util\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/tensorflow/python/distribute/distribute_lib.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m    203\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mautograph\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcore\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mag_ctx\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mautograph_ctx\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    204\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mautograph\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mimpl\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mapi\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mautograph\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 205\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mops\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mdataset_ops\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    206\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdistribute\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mcollective_util\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    207\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdistribute\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mdevice_util\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/tensorflow/python/data/__init__.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     19\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     20\u001b[0m \u001b[0;31m# pylint: disable=unused-import\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 21\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdata\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mexperimental\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     22\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mops\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdataset_ops\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mAUTOTUNE\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     23\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mops\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdataset_ops\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mDataset\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/tensorflow/python/data/experimental/__init__.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     97\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     98\u001b[0m \u001b[0;31m# pylint: disable=unused-import\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 99\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexperimental\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mservice\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    100\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexperimental\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mops\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbatching\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mdense_to_ragged_batch\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    101\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexperimental\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mops\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbatching\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mdense_to_sparse_batch\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/tensorflow/python/data/experimental/service/__init__.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m    417\u001b[0m \"\"\"\n\u001b[1;32m    418\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 419\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexperimental\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mops\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdata_service_ops\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mdistribute\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    420\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexperimental\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mops\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdata_service_ops\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mfrom_dataset_id\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    421\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexperimental\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mops\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdata_service_ops\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mregister_dataset\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/tensorflow/python/data/experimental/ops/data_service_ops.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     21\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcore\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mprotobuf\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mdata_service_pb2\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     22\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mtf2\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 23\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexperimental\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mops\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mcompression_ops\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     24\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexperimental\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mservice\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0m_pywrap_server_lib\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     25\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexperimental\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mservice\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0m_pywrap_utils_exp\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/tensorflow/python/data/experimental/ops/compression_ops.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     14\u001b[0m \u001b[0;31m# ==============================================================================\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     15\u001b[0m \u001b[0;34m\"\"\"Ops for compressing and uncompressing dataset elements.\"\"\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 16\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mutil\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mstructure\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     17\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mops\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mgen_experimental_dataset_ops\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mged_ops\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     18\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/tensorflow/python/data/util/structure.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     30\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mops\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mresource_variable_ops\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     31\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mops\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mtensor_array_ops\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 32\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mops\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mragged\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mragged_tensor\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     33\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplatform\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mtf_logging\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mlogging\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     34\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtypes\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0minternal\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/tensorflow/python/ops/ragged/__init__.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     26\u001b[0m \u001b[0mAPI\u001b[0m \u001b[0mdocstring\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mragged\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     27\u001b[0m \"\"\"\n\u001b[0;32m---> 28\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mtensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mops\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mragged\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mragged_tensor\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/tensorflow/python/ops/ragged/ragged_tensor.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m   2319\u001b[0m \u001b[0;34m@\u001b[0m\u001b[0mtf_export\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"RaggedTensorSpec\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2320\u001b[0m \u001b[0;34m@\u001b[0m\u001b[0mtype_spec_registry\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mregister\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"tf.RaggedTensorSpec\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2321\u001b[0;31m class RaggedTensorSpec(\n\u001b[0m\u001b[1;32m   2322\u001b[0m     type_spec.BatchableTypeSpec, internal_types.RaggedTensorSpec):\n\u001b[1;32m   2323\u001b[0m   \u001b[0;34m\"\"\"Type specification for a `tf.RaggedTensor`.\"\"\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/tensorflow/python/framework/type_spec_registry.py\u001b[0m in \u001b[0;36mdecorator_fn\u001b[0;34m(cls)\u001b[0m\n\u001b[1;32m     57\u001b[0m                        (cls.__module__, cls.__name__, _TYPE_SPEC_TO_NAME[cls]))\n\u001b[1;32m     58\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mname\u001b[0m \u001b[0;32min\u001b[0m \u001b[0m_NAME_TO_TYPE_SPEC\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 59\u001b[0;31m       raise ValueError(\"Name %s has already been registered for class %s.%s.\" %\n\u001b[0m\u001b[1;32m     60\u001b[0m                        (name, _NAME_TO_TYPE_SPEC[name].__module__,\n\u001b[1;32m     61\u001b[0m                         _NAME_TO_TYPE_SPEC[name].__name__))\n","\u001b[0;31mValueError\u001b[0m: Name tf.RaggedTensorSpec has already been registered for class tensorflow.python.ops.ragged.ragged_tensor.RaggedTensorSpec."]}],"source":["from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense\n","\n","# 모델을 설정합니다.\n","model = Sequential()\n","model.add(Dense(24,  input_dim=60, activation='relu'))\n","model.add(Dense(10, activation='relu'))\n","model.add(Dense(1, activation='sigmoid'))\n","\n","# 모델을 컴파일합니다.\n","model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])\n","\n","# 모델을 실행합니다.\n","history=model.fit(X, y, epochs=200, batch_size=10)"]},{"cell_type":"markdown","metadata":{"id":"Y9pTY7GFQKqv"},"source":["## 3. 학습셋과 테스트셋"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"TXNlEThdQKqv"},"outputs":[],"source":["from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense\n","from sklearn.model_selection import train_test_split\n","\n","import pandas as pd"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"aMwZzxk0-We4"},"outputs":[],"source":["# 깃허브에 준비된 데이터를 가져옵니다. 앞에서 이미 데이터를 가져왔으므로 추석 처리합니다. 3번 예제만 별도 실행 시 주석을 해제하여 실습하세요.\n","# !git clone https://github.com/taehojo/data.git"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Wf1oIhQiQKqw"},"outputs":[],"source":["# 광물 데이터를 불러옵니다.\n","df = pd.read_csv('./data/sonar3.csv', header=None)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"qv0lrt18QKqw"},"outputs":[],"source":["# 음파 관련 속성을 X로, 광물의 종류를 y로 저장합니다.\n","X = df.iloc[:,0:60]\n","y = df.iloc[:,60]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3KVHOH9MQKqw"},"outputs":[],"source":["# 학습셋과 테스트셋을 구분합니다.\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, shuffle=True)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ZLLIgz4uQKqx","outputId":"610c9274-a3a4-4dab-abe0-82b3d3ce52e3"},"outputs":[{"name":"stdout","output_type":"stream","text":["Epoch 1/200\n","15/15 [==============================] - 0s 3ms/step - loss: 0.7158 - accuracy: 0.4828\n","Epoch 2/200\n","15/15 [==============================] - 0s 3ms/step - loss: 0.6680 - accuracy: 0.6276\n","Epoch 3/200\n","15/15 [==============================] - 0s 3ms/step - loss: 0.6599 - accuracy: 0.6345\n","Epoch 4/200\n","15/15 [==============================] - 0s 3ms/step - loss: 0.6514 - accuracy: 0.6828\n","Epoch 5/200\n","15/15 [==============================] - 0s 3ms/step - loss: 0.6419 - accuracy: 0.7310\n","Epoch 6/200\n","15/15 [==============================] - 0s 3ms/step - loss: 0.6322 - accuracy: 0.7517\n","Epoch 7/200\n","15/15 [==============================] - 0s 3ms/step - loss: 0.6159 - accuracy: 0.7655\n","Epoch 8/200\n","15/15 [==============================] - 0s 3ms/step - loss: 0.6008 - accuracy: 0.7517\n","Epoch 9/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.5864 - accuracy: 0.7655\n","Epoch 10/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.5700 - accuracy: 0.7517\n","Epoch 11/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.5565 - accuracy: 0.7448\n","Epoch 12/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.5465 - accuracy: 0.7517\n","Epoch 13/200\n","15/15 [==============================] - 0s 3ms/step - loss: 0.5309 - accuracy: 0.7586\n","Epoch 14/200\n","15/15 [==============================] - 0s 3ms/step - loss: 0.5186 - accuracy: 0.7793\n","Epoch 15/200\n","15/15 [==============================] - 0s 3ms/step - loss: 0.5058 - accuracy: 0.8000\n","Epoch 16/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.4999 - accuracy: 0.7931\n","Epoch 17/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.4824 - accuracy: 0.8276\n","Epoch 18/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.4709 - accuracy: 0.8276\n","Epoch 19/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.4638 - accuracy: 0.8276\n","Epoch 20/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.4509 - accuracy: 0.8345\n","Epoch 21/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.4502 - accuracy: 0.8138\n","Epoch 22/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.4522 - accuracy: 0.8138\n","Epoch 23/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.4290 - accuracy: 0.8207\n","Epoch 24/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.4165 - accuracy: 0.8345\n","Epoch 25/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.4125 - accuracy: 0.8345\n","Epoch 26/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.4039 - accuracy: 0.8414\n","Epoch 27/200\n","15/15 [==============================] - 0s 3ms/step - loss: 0.4029 - accuracy: 0.8345\n","Epoch 28/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.3906 - accuracy: 0.8483\n","Epoch 29/200\n","15/15 [==============================] - 0s 3ms/step - loss: 0.3909 - accuracy: 0.8414\n","Epoch 30/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.3776 - accuracy: 0.8552\n","Epoch 31/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.3761 - accuracy: 0.8690\n","Epoch 32/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.3834 - accuracy: 0.8207\n","Epoch 33/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.3674 - accuracy: 0.8828\n","Epoch 34/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.3667 - accuracy: 0.8690\n","Epoch 35/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.3726 - accuracy: 0.8138\n","Epoch 36/200\n","15/15 [==============================] - 0s 3ms/step - loss: 0.3612 - accuracy: 0.8621\n","Epoch 37/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.3482 - accuracy: 0.8690\n","Epoch 38/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.3419 - accuracy: 0.8759\n","Epoch 39/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.3416 - accuracy: 0.8828\n","Epoch 40/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.3412 - accuracy: 0.8690\n","Epoch 41/200\n","15/15 [==============================] - 0s 3ms/step - loss: 0.3370 - accuracy: 0.8690\n","Epoch 42/200\n","15/15 [==============================] - 0s 3ms/step - loss: 0.3546 - accuracy: 0.8690\n","Epoch 43/200\n","15/15 [==============================] - 0s 3ms/step - loss: 0.3399 - accuracy: 0.8552\n","Epoch 44/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.3410 - accuracy: 0.8690\n","Epoch 45/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.3308 - accuracy: 0.8828\n","Epoch 46/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.3216 - accuracy: 0.8690\n","Epoch 47/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.3217 - accuracy: 0.8759\n","Epoch 48/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.3117 - accuracy: 0.8966\n","Epoch 49/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.3079 - accuracy: 0.8966\n","Epoch 50/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.3158 - accuracy: 0.8759\n","Epoch 51/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.3086 - accuracy: 0.8966\n","Epoch 52/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.2970 - accuracy: 0.9034\n","Epoch 53/200\n","15/15 [==============================] - 0s 3ms/step - loss: 0.2946 - accuracy: 0.9103\n","Epoch 54/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.3012 - accuracy: 0.9103\n","Epoch 55/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.2902 - accuracy: 0.9103\n","Epoch 56/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.2877 - accuracy: 0.9034\n","Epoch 57/200\n","15/15 [==============================] - 0s 3ms/step - loss: 0.3006 - accuracy: 0.8966\n","Epoch 58/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.2907 - accuracy: 0.8828\n","Epoch 59/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.2886 - accuracy: 0.9034\n","Epoch 60/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.2779 - accuracy: 0.9172\n","Epoch 61/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.2734 - accuracy: 0.9103\n","Epoch 62/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.2709 - accuracy: 0.9172\n","Epoch 63/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.2746 - accuracy: 0.9103\n","Epoch 64/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.2678 - accuracy: 0.9034\n","Epoch 65/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.2688 - accuracy: 0.9172\n","Epoch 66/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.2670 - accuracy: 0.9103\n","Epoch 67/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.2621 - accuracy: 0.9034\n","Epoch 68/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.2536 - accuracy: 0.9241\n","Epoch 69/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.2567 - accuracy: 0.9241\n","Epoch 70/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.2543 - accuracy: 0.9103\n","Epoch 71/200\n","15/15 [==============================] - 0s 3ms/step - loss: 0.2517 - accuracy: 0.9103\n","Epoch 72/200\n","15/15 [==============================] - 0s 3ms/step - loss: 0.2607 - accuracy: 0.9172\n","Epoch 73/200\n","15/15 [==============================] - 0s 3ms/step - loss: 0.2416 - accuracy: 0.9310\n","Epoch 74/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.2433 - accuracy: 0.9379\n","Epoch 75/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.2397 - accuracy: 0.9310\n","Epoch 76/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.2604 - accuracy: 0.9103\n","Epoch 77/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.2376 - accuracy: 0.9103\n","Epoch 78/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.2348 - accuracy: 0.9310\n","Epoch 79/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.2412 - accuracy: 0.9241\n","Epoch 80/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.2309 - accuracy: 0.9310\n","Epoch 81/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.2245 - accuracy: 0.9517\n","Epoch 82/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.2404 - accuracy: 0.9103\n","Epoch 83/200\n"]},{"name":"stdout","output_type":"stream","text":["15/15 [==============================] - 0s 2ms/step - loss: 0.2319 - accuracy: 0.9448\n","Epoch 84/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.2186 - accuracy: 0.9448\n","Epoch 85/200\n","15/15 [==============================] - 0s 3ms/step - loss: 0.2187 - accuracy: 0.9379\n","Epoch 86/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.2156 - accuracy: 0.9172\n","Epoch 87/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.2416 - accuracy: 0.9103\n","Epoch 88/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.2083 - accuracy: 0.9517\n","Epoch 89/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.2104 - accuracy: 0.9379\n","Epoch 90/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.2052 - accuracy: 0.9448\n","Epoch 91/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.2030 - accuracy: 0.9517\n","Epoch 92/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.2038 - accuracy: 0.9517\n","Epoch 93/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.2086 - accuracy: 0.9172\n","Epoch 94/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.2015 - accuracy: 0.9379\n","Epoch 95/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1943 - accuracy: 0.9517\n","Epoch 96/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.2063 - accuracy: 0.9310\n","Epoch 97/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1968 - accuracy: 0.9448\n","Epoch 98/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1905 - accuracy: 0.9586\n","Epoch 99/200\n","15/15 [==============================] - 0s 3ms/step - loss: 0.1900 - accuracy: 0.9517\n","Epoch 100/200\n","15/15 [==============================] - 0s 3ms/step - loss: 0.2090 - accuracy: 0.9172\n","Epoch 101/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1898 - accuracy: 0.9448\n","Epoch 102/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1897 - accuracy: 0.9448\n","Epoch 103/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1821 - accuracy: 0.9448\n","Epoch 104/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1889 - accuracy: 0.9379\n","Epoch 105/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1777 - accuracy: 0.9586\n","Epoch 106/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1827 - accuracy: 0.9379\n","Epoch 107/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1774 - accuracy: 0.9586\n","Epoch 108/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1715 - accuracy: 0.9724\n","Epoch 109/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1697 - accuracy: 0.9655\n","Epoch 110/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1747 - accuracy: 0.9655\n","Epoch 111/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1648 - accuracy: 0.9586\n","Epoch 112/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1670 - accuracy: 0.9655\n","Epoch 113/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1641 - accuracy: 0.9586\n","Epoch 114/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1630 - accuracy: 0.9655\n","Epoch 115/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1589 - accuracy: 0.9655\n","Epoch 116/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1622 - accuracy: 0.9517\n","Epoch 117/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1593 - accuracy: 0.9586\n","Epoch 118/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1527 - accuracy: 0.9724\n","Epoch 119/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1539 - accuracy: 0.9655\n","Epoch 120/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1534 - accuracy: 0.9724\n","Epoch 121/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1550 - accuracy: 0.9655\n","Epoch 122/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1499 - accuracy: 0.9793\n","Epoch 123/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1503 - accuracy: 0.9724\n","Epoch 124/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1494 - accuracy: 0.9586\n","Epoch 125/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1423 - accuracy: 0.9793\n","Epoch 126/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1399 - accuracy: 0.9793\n","Epoch 127/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1456 - accuracy: 0.9793\n","Epoch 128/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1472 - accuracy: 0.9724\n","Epoch 129/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1365 - accuracy: 0.9793\n","Epoch 130/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1349 - accuracy: 0.9793\n","Epoch 131/200\n","15/15 [==============================] - 0s 3ms/step - loss: 0.1334 - accuracy: 0.9793\n","Epoch 132/200\n","15/15 [==============================] - 0s 3ms/step - loss: 0.1331 - accuracy: 0.9793\n","Epoch 133/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1361 - accuracy: 0.9724\n","Epoch 134/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1299 - accuracy: 0.9793\n","Epoch 135/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1275 - accuracy: 0.9793\n","Epoch 136/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1303 - accuracy: 0.9793\n","Epoch 137/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1272 - accuracy: 0.9724\n","Epoch 138/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1327 - accuracy: 0.9724\n","Epoch 139/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1229 - accuracy: 0.9724\n","Epoch 140/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1265 - accuracy: 0.9793\n","Epoch 141/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1230 - accuracy: 0.9724\n","Epoch 142/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1197 - accuracy: 0.9793\n","Epoch 143/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1210 - accuracy: 0.9793\n","Epoch 144/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1168 - accuracy: 0.9793\n","Epoch 145/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1211 - accuracy: 0.9793\n","Epoch 146/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1178 - accuracy: 0.9793\n","Epoch 147/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1118 - accuracy: 0.9793\n","Epoch 148/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1111 - accuracy: 0.9793\n","Epoch 149/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1213 - accuracy: 0.9724\n","Epoch 150/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1118 - accuracy: 0.9724\n","Epoch 151/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1075 - accuracy: 0.9793\n","Epoch 152/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1069 - accuracy: 0.9793\n","Epoch 153/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1069 - accuracy: 0.9793\n","Epoch 154/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1041 - accuracy: 0.9793\n","Epoch 155/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1030 - accuracy: 0.9793\n","Epoch 156/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1010 - accuracy: 0.9793\n","Epoch 157/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1045 - accuracy: 0.9793\n","Epoch 158/200\n","15/15 [==============================] - 0s 3ms/step - loss: 0.1019 - accuracy: 0.9793\n","Epoch 159/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.0980 - accuracy: 0.9793\n","Epoch 160/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.1007 - accuracy: 0.9793\n","Epoch 161/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.0992 - accuracy: 0.9793\n","Epoch 162/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.0944 - accuracy: 0.9793\n","Epoch 163/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.0941 - accuracy: 0.9793\n","Epoch 164/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.0965 - accuracy: 0.9793\n","Epoch 165/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.0934 - accuracy: 0.9793\n","Epoch 166/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.0922 - accuracy: 0.9793\n","Epoch 167/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.0901 - accuracy: 0.9793\n","Epoch 168/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.0898 - accuracy: 0.9793\n","Epoch 169/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.0893 - accuracy: 0.9793\n","Epoch 170/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.0890 - accuracy: 0.9793\n","Epoch 171/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.0836 - accuracy: 0.9793\n","Epoch 172/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.0828 - accuracy: 0.9793\n","Epoch 173/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.0833 - accuracy: 0.9862\n","Epoch 174/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.0849 - accuracy: 0.9793\n","Epoch 175/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.0814 - accuracy: 0.9793\n","Epoch 176/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.0821 - accuracy: 0.9793\n","Epoch 177/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.0795 - accuracy: 0.9793\n","Epoch 178/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.0791 - accuracy: 0.9793\n","Epoch 179/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.0774 - accuracy: 0.9862\n","Epoch 180/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.0792 - accuracy: 0.9793\n","Epoch 181/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.0832 - accuracy: 0.9793\n","Epoch 182/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.0841 - accuracy: 0.9793\n","Epoch 183/200\n","15/15 [==============================] - 0s 3ms/step - loss: 0.0869 - accuracy: 0.9793\n","Epoch 184/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.0776 - accuracy: 0.9793\n","Epoch 185/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.0713 - accuracy: 0.9931\n","Epoch 186/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.0710 - accuracy: 0.9931\n","Epoch 187/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.0712 - accuracy: 0.9862\n","Epoch 188/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.0693 - accuracy: 0.9862\n","Epoch 189/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.0680 - accuracy: 0.9931\n","Epoch 190/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.0662 - accuracy: 0.9862\n","Epoch 191/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.0654 - accuracy: 0.9931\n","Epoch 192/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.0638 - accuracy: 0.9931\n","Epoch 193/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.0639 - accuracy: 0.9931\n","Epoch 194/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.0645 - accuracy: 0.9931\n","Epoch 195/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.0654 - accuracy: 0.9931\n","Epoch 196/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.0656 - accuracy: 0.9931\n","Epoch 197/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.0655 - accuracy: 0.9862\n","Epoch 198/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.0670 - accuracy: 0.9931\n","Epoch 199/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.0702 - accuracy: 0.9862\n","Epoch 200/200\n","15/15 [==============================] - 0s 2ms/step - loss: 0.0590 - accuracy: 0.9931\n"]}],"source":["# 모델을 설정합니다.\n","model = Sequential()\n","model.add(Dense(24,  input_dim=60, activation='relu'))\n","model.add(Dense(10, activation='relu'))\n","model.add(Dense(1, activation='sigmoid'))\n","\n","# 모델을 컴파일합니다.\n","model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])\n","\n","# 모델을 실행합니다.\n","history=model.fit(X_train, y_train, epochs=200, batch_size=10)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"C3mxauzgQKqx","outputId":"86942566-aac5-45f9-b19b-e523aeb48397"},"outputs":[{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 2ms/step - loss: 0.4214 - accuracy: 0.8413\n","Test accuracy: 0.841269850730896\n"]}],"source":["# 모델을 테스트셋에 적용해 정확도를 구합니다.\n","score=model.evaluate(X_test, y_test)\n","print('Test accuracy:', score[1])"]},{"cell_type":"markdown","metadata":{"id":"FLvs4-3YQKqx"},"source":["## 4. 모델 저장과 재사용"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"zg8aMT6SQKqy"},"outputs":[],"source":["# 모델 이름과 저장할 위치를 함께 지정합니다.\n","model.save('./data/model/my_model.hdf5')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xTYfJ1ImVm38"},"outputs":[],"source":["from tensorflow.keras.models import Sequential, load_model"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"QuXXxhc8QKqy"},"outputs":[],"source":["# 테스트를 위해 조금 전 사용한 모델을 메모리에서 삭제합니다.\n","del model"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-j7PwJfoQKqy","outputId":"98cb48d5-33df-4fbe-9a57-8bccc14c49c3"},"outputs":[{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 2ms/step - loss: 0.4214 - accuracy: 0.8413\n","Test accuracy: 0.841269850730896\n"]}],"source":["# 모델을 새로 불러옵니다.\n","model = load_model('./data/model/my_model.hdf5')\n","\n","# 불러온 모델을 테스트셋에 적용해 정확도를 구합니다.\n","score=model.evaluate(X_test, y_test)\n","print('Test accuracy:', score[1])"]},{"cell_type":"markdown","metadata":{"id":"9uvgQSD4QKqz"},"source":["## 5. k겹 교차 검증"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"zPyhpZRLQKqz"},"outputs":[],"source":["from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense\n","from sklearn.model_selection import KFold\n","from sklearn.metrics import accuracy_score\n","\n","import pandas as pd\n","\n","# 깃허브에 준비된 데이터를 가져옵니다. 앞에서 이미 데이터를 가져왔으므로 추석 처리합니다. 3번 예제만 별도 실행 시 주석을 해제하여 실습하세요.\n","# !git clone https://github.com/taehojo/data.git\n","\n","# 광물 데이터를 불러옵니다.\n","df = pd.read_csv('./data/sonar3.csv', header=None)\n","\n","# 음파 관련 속성을 X로, 광물의 종류를 y로 저장합니다.\n","X = df.iloc[:,0:60]\n","y = df.iloc[:,60]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"RO--g53mQKq0","outputId":"e390d6d6-657b-4b10-cf64-389a323f979a"},"outputs":[{"name":"stdout","output_type":"stream","text":["2/2 [==============================] - 0s 2ms/step - loss: 1.0080 - accuracy: 0.7381\n","2/2 [==============================] - 0s 2ms/step - loss: 0.7071 - accuracy: 0.8095\n","WARNING:tensorflow:5 out of the last 9 calls to <function Model.make_test_function.<locals>.test_function at 0x000001EDE50D60D0> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.\n","2/2 [==============================] - 0s 2ms/step - loss: 0.3312 - accuracy: 0.8810\n","WARNING:tensorflow:6 out of the last 11 calls to <function Model.make_test_function.<locals>.test_function at 0x000001EDE5112AF0> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.\n","2/2 [==============================] - 0s 2ms/step - loss: 0.4377 - accuracy: 0.9024\n","2/2 [==============================] - 0s 3ms/step - loss: 0.6416 - accuracy: 0.7317\n","정확도: [0.738095223903656, 0.8095238208770752, 0.8809523582458496, 0.9024389982223511, 0.7317073345184326]\n","정확도 평균: 0.8125435471534729\n"]}],"source":["# 몇 겹으로 나눌 것인지를 정합니다.\n","k=5\n","\n","# KFold 함수를 불러옵니다. 분할하기 전에 샘플이 치우치지 않도록 섞어 줍니다.\n","kfold = KFold(n_splits=k, shuffle=True)\n","\n","# 정확도가 채워질 빈 리스트를 준비합니다.\n","acc_score = []\n","\n","def model_fn():\n","    model = Sequential() # 딥러닝 모델의 구조를 시작합니다.\n","    model.add(Dense(24, input_dim=60, activation='relu'))\n","    model.add(Dense(10, activation='relu'))\n","    model.add(Dense(1, activation='sigmoid'))\n","    return model\n","\n","# K겹 교차 검증을 이용해 k번의 학습을 실행합니다.\n","for train_index , test_index in kfold.split(X):  # for 문에 의해서 k번 반복합니다. spilt()에 의해 k개의 학습셋, 테스트셋으로 분리됩니다.\n","    X_train , X_test = X.iloc[train_index,:], X.iloc[test_index,:]\n","    y_train , y_test = y.iloc[train_index], y.iloc[test_index]\n","\n","    model = model_fn()\n","    model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])\n","    history=model.fit(X_train, y_train, epochs=200, batch_size=10, verbose=0)\n","\n","    accuracy = model.evaluate(X_test, y_test)[1]  # 정확도를 구합니다.\n","    acc_score.append(accuracy)  # 정확도 리스트에 저장합니다.\n","\n","# k번 실시된 정확도의 평균을 구합니다.\n","avg_acc_score = sum(acc_score)/k\n","\n","# 결과를 출력합니다.\n","print('정확도:', acc_score)\n","print('정확도 평균:', avg_acc_score)"]}],"metadata":{"colab":{"name":"ch13-colab.ipynb","provenance":[{"file_id":"https://github.com/taehojo/deeplearning/blob/master/colab/ch13-colab.ipynb","timestamp":1733280829508},{"file_id":"https://github.com/taehojo/deeplearning/blob/master/colab/ch13-colab.ipynb","timestamp":1642730761008}]},"kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.9.7"}},"nbformat":4,"nbformat_minor":0}